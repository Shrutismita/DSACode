Q: https://leetcode.com/problems/majority-element-ii/description/

Ans:

public class Solution {
    public IList<int> MajorityElement(int[] nums) {
        int? candidate1 = null, candidate2 = null, count1 = 0, count2=0;
        List<int> majorityElement = new List<int>();
        for(int i = 0; i < nums.Length; i++)
        {
            if(candidate1.HasValue && nums[i] == candidate1)
            {
                count1++;
            }
            else if(candidate2.HasValue &&  nums[i] == candidate2)
            {
                count2++;
            }
            else if(count1 == 0)
            {
                candidate1 = nums[i];
                count1 = 1;
            }
             else if(count2 == 0)
            {
                candidate2 = nums[i];
                count2 = 1;
            }
            else
            {
                 count1--;
                 count2--;
            }
        }
        if((nums.Count(x=>x == candidate1)) > (nums.Length/3))
        {
            majorityElement.Add(candidate1.Value);
        }
        if((nums.Count(x=>x == candidate2)) > (nums.Length/3))
        {
           majorityElement.Add(candidate2.Value);
        }
        return majorityElement;
    }
}
