Q: https://leetcode.com/problems/merge-k-sorted-lists/description/

Ans:

public class Solution {
    
    public ListNode MergeKLists(ListNode[] lists) {
        int n = lists.Length;
        if(n == 0)return null;
        return ParitionAndMerge(0, n-1, lists);
    }
    private static ListNode ParitionAndMerge(int start,int end, ListNode[] list)
    {
        if(start > end) return null;
        if(start == end )
        {
            return list[start];
        }
        int mid = start + (end-start)/2;
        ListNode L1 = ParitionAndMerge(start, mid, list);
        ListNode L2 = ParitionAndMerge(mid + 1, end, list);
        return mergeTwoList(L1,L2);
    }
    private static ListNode mergeTwoList(ListNode l1,ListNode l2)
    {
        if(l1 == null)return l2;
        if(l2 == null)return l1;
        if(l1.val <= l2.val)
        {
            l1.next = mergeTwoList(l1.next,l2);
            return l1;
        }
        else
        {
            l2.next = mergeTwoList(l1, l2.next);
            return l2;
        }
        return null;
    }
}
