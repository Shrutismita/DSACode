Q:- https://leetcode.com/problems/copy-list-with-random-pointer/
TC - O(n)
Ans:-
/*
// Definition for a Node.
public class Node {
    public int val;
    public Node next;
    public Node random;
    
    public Node(int _val) {
        val = _val;
        next = null;
        random = null;
    }
}
*/

public class Solution {
 
    public Node CopyRandomList(Node head) {
        if(head == null)
        {
            return null;
        }
       Dictionary<Node,Node> dict = new Dictionary<Node,Node>();
        Node curr = head;
        Node prev = null;
        Node newHead = null;
         while( curr != null)
         {
            Node temp = new Node(curr.val);
            dict.Add(curr,temp);
            if(newHead == null)
            {
                newHead = temp ;
                prev = newHead;
            }
            else{
                prev.next = temp;
                prev = temp;
            }
            curr = curr.next;
         }
         curr = head;
         Node newCurr =newHead;
         while(curr != null)
         {
            if(curr.random == null)
            {
                newCurr.random = null;
            }
            else
            {               
                newCurr.random = dict[curr.random];
            }
            curr = curr.next;
            newCurr = newCurr.next;
         }
        return newHead;
    }
}
