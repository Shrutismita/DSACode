Q:862. https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/description/
==========================================================================================

class Solution {
    public int shortestSubarray(int[] nums, int k) {
        int n = nums.length;
        long[] pref = new long[n+1];
        for(int i=0; i<n; i++)
            pref[i+1] = pref[i] + nums[i]; 
        int min = n+1;
        Deque<Integer> queue = new LinkedList(); 
        
        for(int i=0; i<=n; i++){			
            while(!queue.isEmpty() && pref[i] <= pref[queue.getLast()])
                queue.removeLast();
           
            while(!queue.isEmpty() && pref[i] - pref[queue.getFirst()] >= k)
                min = Math.min(min, i - queue.removeFirst());
            queue.addLast(i);
        }
        
        return min <= n? min : -1;
    }
}
