Q:- 992. https://leetcode.com/problems/subarrays-with-k-different-integers/description/
================================================================================================

class Solution {
    public int subarraysWithKDistinct(int[] nums, int k) {
        return slidingWindow(nums , k) - slidingWindow(nums, k - 1);
    }
    public int slidingWindow(int[] nums, int k)
    {
        int n = nums.length;
        Map<Integer,Integer> map = new HashMap<>();
        int i = 0, j = 0;
        int count = 0;
        while(j < n)
        {
            int num_j = nums[j];
            map.put(num_j, map.getOrDefault(num_j , 0) + 1);

            while(map.keySet().size() > k)
            {
                int num_i = nums[i];
                map.put(num_i , map.getOrDefault(num_i,0) - 1);
                if(map.get(num_i) == 0)
                {
                    map.remove(num_i);
                }
                i++;
            }
            count += (j - i + 1);
            j++;
        }
        return count;
    }
}
