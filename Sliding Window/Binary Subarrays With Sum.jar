Q: 930. https://leetcode.com/problems/binary-subarrays-with-sum/
TC :- O(n)
====================================================================================
class Solution {
    public int numSubarraysWithSum(int[] nums, int goal) {
        int n = nums.length;
        int currSum = 0;
       
         HashMap<Integer, Integer> map = new HashMap<>();
        int result = 0;
        map.put(0,1);
        for (int num : nums)
        {
            currSum += num;
            if(map.containsKey(currSum - goal))
            {
               result += map.get(currSum - goal);
            }
             map.put(currSum , map.getOrDefault(currSum,0) + 1);

            
        }
        return result;
    }
}
